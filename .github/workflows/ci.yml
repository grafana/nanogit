name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    container:
      image: golang:1.24-alpine
    steps:
      - uses: actions/checkout@v4
      - name: Install build dependencies
        run: apk add --no-cache git make
      - name: Check formatting
        run: make fmt
      - name: Verify formatting
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "::error::Code formatting issues found. Run 'make fmt' to fix them."
            git diff
            exit 1
          fi

  lint:
    name: Lint
    runs-on: ubuntu-latest
    container:
      image: golang:1.24-alpine
    steps:
      - uses: actions/checkout@v4
      - name: Install build dependencies
        run: apk add --no-cache git make
      - name: Run linter
        run: make lint

  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    container:
      image: golang:1.24-alpine
    steps:
      - uses: actions/checkout@v4
      - name: Install build dependencies
        run: |
          apk add --no-cache git make gcc musl-dev bash curl gpg
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run unit tests
        env:
          CGO_ENABLED: 1
          GOFLAGS: -mod=vendor
        run: make test-unit
      - name: Upload coverage
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          fail_ci_if_error: true
          files: ./coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}

  test-integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    container:
      image: golang:1.24-alpine
    steps:
      - uses: actions/checkout@v4
      - name: Install build dependencies
        run: |
          apk add --no-cache git make gcc musl-dev bash curl gpg
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests
        env:
          CGO_ENABLED: 1
          GOFLAGS: -mod=vendor
        run: make test-integration

  security:
    name: Security
    runs-on: ubuntu-latest
    container:
      image: golang:1.24-alpine
    steps:
      - uses: actions/checkout@v4
      - name: Install build dependencies
        run: apk add --no-cache git make
      - name: Check for vulnerabilities
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

  trufflehog:
    name: Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for scanning git history
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@90190deac64289cb10bb694894be8db9ead8790b
        with:
          extra_args: --results=verified,unknown

  deps:
    name: Dependencies
    runs-on: ubuntu-latest
    container:
      image: golang:1.24-alpine
    steps:
      - uses: actions/checkout@v4
      - name: Install build dependencies
        run: apk add --no-cache git make
      - name: Check for go.mod and go.sum consistency
        run: |
          go mod tidy
          if [ -n "$(git status --porcelain)" ]; then
            echo "::error::go.mod and go.sum are out of sync. Run 'go mod tidy' to fix them."
            git diff
            exit 1
          fi
      - name: Check for unused dependencies
        run: |
          go install github.com/remyoudompheng/go-misc/deadcode@latest
          deadcode ./... || true

  staticcheck:
    name: Static Analysis
    runs-on: ubuntu-latest
    container:
      image: golang:1.24-alpine
    steps:
      - uses: actions/checkout@v4
      - name: Install build dependencies
        run: apk add --no-cache git make
      - name: Check for staticcheck issues
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...
